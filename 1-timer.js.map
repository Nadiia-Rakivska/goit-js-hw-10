{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nconst refs = {\n  dateTimeElem : document.querySelector(\"#datetime-picker\"),\n  days: document.querySelector(\"[data-days]\"),\n  hours: document.querySelector(\"[data-hours]\"),\n  minutes: document.querySelector(\"[data-minutes]\"),\n  seconds: document.querySelector(\"[data-seconds]\"),\n} \nlet userSelectedDate=\"\";\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n  },\n};\nconst btnElem = document.querySelector(\"[data-start]\");\nbtnElem.disabled = true;\nlet result =0;\nconst fp = flatpickr(refs.dateTimeElem, options);\nrefs.dateTimeElem.addEventListener(\"input\", e=>{\n  const time =fp.selectedDates[0].getTime()\n  const timeNow = Date.now();\n  result = time - timeNow;\n  if (result>0) {\n    btnElem.disabled = false;\n  }\n  else{\n    iziToast.error({\n      message: 'Please choose a date in the future',\n      position: 'topRight',\n    });\n  }\n \n})  \n btnElem.addEventListener(\"click\", e=>{\n    btnElem.disabled = true;\n    refs.dateTimeElem.disabled = true;\n    const intervalId = setInterval(()=>{\n      const convertDateTime= convertMs(result);\n   updateTimerDisplay(convertDateTime);\n      if (result<1000) {\n        clearInterval(intervalId);\n        refs.dateTimeElem.disabled = false;\n      }\n      result-=1000;\n    },1000)\n  })\nfunction updateTimerDisplay({days, hours,minutes, seconds}) {\n     refs.days.textContent = String(days).padStart(2, \"0\");\n      refs.minutes.textContent =String(minutes).padStart(2, \"0\");\n      refs.hours.textContent =String(hours).padStart(2, \"0\");\n      refs.seconds.textContent =String(seconds).padStart(2, \"0\");\n}  \nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  return { days, hours, minutes, seconds };\n}\n\n\n\n\n"],"names":["refs","options","selectedDates","btnElem","result","fp","flatpickr","time","timeNow","iziToast","intervalId","convertDateTime","convertMs","updateTimerDisplay","days","hours","minutes","seconds","ms"],"mappings":"+IAKA,MAAMA,EAAO,CACX,aAAe,SAAS,cAAc,kBAAkB,EACxD,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACFA,EAAc,CAAC,CACnC,CACH,EACMC,EAAU,SAAS,cAAc,cAAc,EACrDA,EAAQ,SAAW,GACnB,IAAIC,EAAQ,EACZ,MAAMC,EAAKC,EAAUN,EAAK,aAAcC,CAAO,EAC/CD,EAAK,aAAa,iBAAiB,QAAS,GAAG,CAC7C,MAAMO,EAAMF,EAAG,cAAc,CAAC,EAAE,QAAS,EACnCG,EAAU,KAAK,MACrBJ,EAASG,EAAOC,EACZJ,EAAO,EACTD,EAAQ,SAAW,GAGnBM,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,UAChB,CAAK,CAGL,CAAC,EACAN,EAAQ,iBAAiB,QAAS,GAAG,CAClCA,EAAQ,SAAW,GACnBH,EAAK,aAAa,SAAW,GAC7B,MAAMU,EAAa,YAAY,IAAI,CACjC,MAAMC,EAAiBC,EAAUR,CAAM,EAC1CS,EAAmBF,CAAe,EAC3BP,EAAO,MACT,cAAcM,CAAU,EACxBV,EAAK,aAAa,SAAW,IAE/BI,GAAQ,GACT,EAAC,GAAI,CACV,CAAG,EACH,SAASS,EAAmB,CAAC,KAAAC,EAAM,MAAAC,EAAM,QAAAC,EAAS,QAAAC,CAAO,EAAG,CACvDjB,EAAK,KAAK,YAAc,OAAOc,CAAI,EAAE,SAAS,EAAG,GAAG,EACnDd,EAAK,QAAQ,YAAa,OAAOgB,CAAO,EAAE,SAAS,EAAG,GAAG,EACzDhB,EAAK,MAAM,YAAa,OAAOe,CAAK,EAAE,SAAS,EAAG,GAAG,EACrDf,EAAK,QAAQ,YAAa,OAAOiB,CAAO,EAAE,SAAS,EAAG,GAAG,CAC/D,CACA,SAASL,EAAUM,EAAI,CAQrB,MAAMJ,EAAO,KAAK,MAAMI,EAAK,KAAG,EAE1BH,EAAQ,KAAK,MAAOG,EAAK,MAAO,IAAI,EAEpCF,EAAU,KAAK,MAAQE,EAAK,MAAO,KAAQ,GAAM,EAEjDD,EAAU,KAAK,MAASC,EAAK,MAAO,KAAQ,IAAU,GAAM,EAClE,MAAO,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC"}